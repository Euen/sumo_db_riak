%% -*- mode: erlang;erlang-indent-level: 2;indent-tabs-mode: nil -*-
%% ex: ts=4 sw=4 ft=erlang et

%% == Erlang Compiler ==

{erl_opts, [
  warn_unused_vars,
  warnings_as_errors,
  ewarn_export_all,
  warn_shadow_vars,
  warn_unused_import,
  warn_unused_function,
  warn_bif_clash,
  warn_unused_record,
  warn_deprecated_function,
  warn_obsolete_guard,
  strict_validation,
  warn_export_vars,
  warn_exported_vars,
  warn_missing_spec,
  warn_untyped_record,
  debug_info,
  {parse_transform, lager_transform}
]}.

%% == Dependencies ==

{deps, [
  {sumo_db, "0.6.4"},
  {riakc, "2.4.1"},
  {iso8601, "1.1.2", {pkg, inaka_iso8601}}
]}.

%% == Overrides ==

{overrides, [
  {override, rebar3_protobuffs_plugin, [
    {deps, [
      {protobuffs, {git, "https://github.com/basho/erlang_protobuffs.git", {tag, "0.9.0"}}
    }]
  }]},
  {override, riak_pb, [
    {plugins, [
      {riak_pb_msgcodegen, {git, "https://github.com/tsloughter/riak_pb_msgcodegen.git", {ref, "dc51e30"}}},
      {rebar3_protobuffs_plugin, {git, "https://github.com/cmkarlsson/rebar3_protobuffs_plugin.git", {tag, "0.1.1"}}}
    ]},
    {provider_hooks, [
      {pre, [
        {compile, {protobuffs, compile}},
        {compile, riak_pb_msgcodegen}
      ]}
    ]}
  ]}
]}.

%% == Profiles ==

{profiles, [
  {test, [
    {deps, [
      {katana_test, "0.1.1"},
      {mixer, "0.1.5", {pkg, inaka_mixer}}
    ]}
  ]}
]}.

%% == Common Test ==

{ct_compile_opts, [
  warn_unused_vars,
  warn_export_all,
  warn_shadow_vars,
  warn_unused_import,
  warn_unused_function,
  warn_bif_clash,
  warn_unused_record,
  warn_deprecated_function,
  warn_obsolete_guard,
  strict_validation,
  warn_export_vars,
  warn_exported_vars,
  warn_missing_spec,
  warn_untyped_record,
  debug_info,
  {parse_transform, lager_transform}
]}.

{ct_opts, [
  {sys_config, ["test/test.config"]}
]}.

%% == Cover ==

{cover_enabled, true}.

{cover_opts, [verbose]}.

%% == EDoc ==

{edoc_opts, [
  {report_missing_types, true},
  {source_path, ["src"]},
  {report_missing_types, true},
  {todo, true},
  {packages, false},
  {subpackages, false}
]}.

%% == Dialyzer ==

{dialyzer, [
  {warnings, [
    race_conditions,
    no_return,
    unmatched_returns,
    error_handling
  ]},
  {plt_apps, top_level_deps},
  {plt_extra_apps, []},
  {plt_location, local},
  {plt_prefix, "sumo_db_riak"},
  {base_plt_location, ".plt"},
  {base_plt_prefix, "sumo_db_riak"}
]}.

%% == Shell ==

{shell, [{apps, [sumo_db_riak]}]}.
